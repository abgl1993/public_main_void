package com.sapient;

import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Logger;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

import org.apache.log4j.BasicConfigurator;

import com.sapeint.model.User;

public class DataAccessObject {

	static Logger log;
	Context ctx = null;
	DataSource ds = null;
	Connection con = null;
	PreparedStatement ps = null;

	public DataAccessObject() {
		log = Logger.getLogger(DataAccessObject.class.getName());
		BasicConfigurator.configure();
        try {
			ctx = new InitialContext();
			ds = (DataSource)ctx.lookup("java:comp/env/jdbc/ProjectDB");
			con = ds.getConnection();
		} catch (NamingException e) {
			//e.printStackTrace();
			log.info("Naming Exception!");
		} catch (SQLException e) {
			//e.printStackTrace();
			log.info("SQL Connection Error!");
		}
	}
	public boolean validation(String emailid, String password){
		
		try {
			ps = con.prepareStatement("SELECT NAME FROM USER_DETAILS WHERE EMAIL_ID=? AND PASSWORD=?");
			ps.setString(1, emailid);
			ps.setString(2, password);
			
			ResultSet rs = ps.executeQuery();
			
			if(rs.next()) {
				//fname = rs.getString(1);
				//lname = rs.getString(2);
				return true;
			}
			
			return false;
		}catch (SQLException e) {
			//e.printStackTrace();
			log.info("SQL Connection Error!");
		}
		return false;
	}
	
	public int addUser(int uid,String name,String email,String password,String contactNo,String address)
	{
		
		try {
			ps = con.prepareStatement("INSERT INTO USER_DETAILS VALUES (?,?,?,?,?,?,?)");
			
			ps.setString(1, name);
			ps.setString(2, email);
			ps.setString(3, password);
			ps.setString(4, contactNo);
			ps.setString(5, address);
			ps.setString(6,null);
			ps.setInt(7,(int) Math.random());
			ps.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return 1;
		
	}
	public User getUser(String email){
		User user=null;
	
		try {
			ps = con.prepareStatement("SELECT * FROM USER_DETAILS WHERE EMAIL_ID=?");
			ps.setString(1,email);
			ResultSet rs = ps.executeQuery();
			
			
			while(rs.next()) {

				user = new User(rs.getString(1), rs.getString(2), rs.getString(3), rs.getInt(4), rs.getString(5));
     			

				
			}
			
		}catch (SQLException e) {
			//e.printStackTrace();
			log.info("SQL Connection Error!");
		}
		
		return user;
	}
	public List<Item> getProductList(){
		List<Item> items = new ArrayList<Item>();
		
		try {
			ps = con.prepareStatement("SELECT * FROM PRODUCT_DETAILS");
			ResultSet rs = ps.executeQuery();
			
			while(rs.next()) {

				Item item = new Item(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getInt(6), rs.getInt(7), rs.getString(8));
     			

				items.add(item);
			}
			
		}catch (SQLException e) {
			//e.printStackTrace();
			log.info("SQL Connection Error!");
		}
		return items;
	}
	public Item getItem(String itemName){
		Item item=null;
		try {
			ps=con.prepareStatement("SELECT * FROM PRODUCT_DETAILS WHERE MODEL_NAME = ?");
			ps.setString(1,itemName);
			ResultSet rs = ps.executeQuery();
			item = null;
			if(rs.next())
			{
				item = new Item(rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5), rs.getInt(6), rs.getInt(7), rs.getString(8));			
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		this.dataAccessObjectClose();
		return item;
		
	}
	
	public void dataAccessObjectClose(){
		ctx=null;
		ds = null;
		con= null;
		ps = null;
	}
}
